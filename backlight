#!/bin/sh
# 
# https://github.com/fraxflax/backlight
# 
# backlight is a POSIX-compliant (pure bourne shell) script that
# allows you to get and set the brightness of the screen via
# /sys/backlight if supported by your system.
# 
# This is free software created by frax@axnet.nu,
# feel free to use, modify and/or distribute as you see fit.
# 
# TODO:
# - Handle multiple backlight devices 
#   (currently only the first one found is used)
#

# Set LOWEST to 0 to be able to completely turn the backlight off with
# -s and -d or to a higher value (e.g. 1) to prevent turning the
# light completely off as this might be considered turning the screen
# off and "xset dpms force on" on some systems will turn up the light
# if brighness is 0.
LOWEST=1

SYS="/sys/class/backlight/`ls -1 /sys/class/backlight/ | head -1`"

backlight=`basename $0` || backlight=backlight
USAGE() {
    COLS=72; ___=''; __=''; which tput>/dev/null && { COLS=`tput cols`; ___=`tput bold`; __=`tput sgr0`; }
    FMT=cat;which fmt>/dev/null && FMT="fmt -w $COLS"
    [ -n "$1" ] && /bin/echo -e "\n###\n$@\n###" >/dev/stderrr
$FMT>/dev/stderr<<EOF

${___}SYNOPSIS:
    $backlight$__ [ $___-g$__ | $___--get$__ | $___-get$__ ]
       Get the current brightness value in percent of MAX brightness.
$___
    $backlight$__ [ $___-s$__ | $___--set$__ | $___-set$__ ] percent
       Set the brightness to 'percent' of max brightness.  'percent'
       is an integer (anything trailing the first consecutive digits
       is ignored (e.g. a %-sign), allowing you to use the --get
       output as --set input without modification).
$___
    $backlight$__ { $___-i$__ | $___--increase$__ | $___-inc$__ } step
${___}    $backlight$__ +step
       Increase the brightness by step percent units of max brightnes.$
$___
    $backlight$__ { $___-d$__ | $___--decrease$__ | $___-dec$__ } step
${___}    $backlight$__ -step
       Increase the brightness by step percent units of max brightnes.
$___
    $backlight$__ { $___-o$__ | $___--off$__ }
	Set the brightness to 0 (turnsthe backlight off).
       --set and --increase will never completely turn the brightness
       off, as it might have the consequence that when running 'xset
       dpms force on' the brightness will unexpectedly be increased.

$___
    $backlight --install$__ [ groupname ]
       Allow the specified group (or the video group if none
       specified) to set the brighness forth on.

       If systemd is in use '$backlight --install' will also install,
       enable and run a systemd service making 'brightness' writeable
       by the specified group at system startup.

       '$___$backlight --install$__' will replace the
       /etc/systemd/system/backlightgroup.service if it already exists.

       '$___$backlight --install$__' must be executed with effective user-id 0 (run as root / with sudo).

${___}EXAMPLES:$__
        Get current backlight brightness:
${___}    $backlight --get    $__

        Set backlight brightness to 75%:
${___}    $backlight 75    $__

        Increase backlight brightness with 5%-units:
${___}    $backlight +5%    $__

        Decrease backlight brightness with 5%-units:
${___}    $backlight -d 5    $__

        Flash the screen, restoring the backlight brightness afterwards:
${___}    B=\$($backlight); $backlight 0 ; sleep 0.5 ; $backlight 100 ; sleep 0.5 $backlight 0 ; sleep 0.5 ; $backlight \$B     $__

EOF
        exit 1
}

[ -e "$SYS/brightness" -a -e "$SYS/max_brightness" ] || USAGE "# No supported backlight system in /sys/class/backlight"

[ "--install" = "$1" ] && {
    [ `id -u` -eq 0 ] || USAGE "# '$backlight --install' must be run as root"
    GRP=video
    [ -n "$2" ] && GRP=$2
    grep -E "^$GRP:" /etc/group >/dev/null || USAGE "# group '$GRP' not found in /etc/group"
    chgrp $GRP /sys/class/backlight/*/brightness ; chmod g+w /sys/class/backlight/*/brightness
    echo
    ls -l /sys/class/backlight/*/brightness
    echo
    [ -d /etc/systemd/system ] || { echo "WARNING '/etc/systemd/system/' does not exists, systemd backlightgroup.service not installed."; exit 0;}
    cat>/etc/systemd/system/backlightgroup.service<<EOF
[Unit]
Description=Permission for group $GRP to set backlight brightness
After=syslog.target

[Service]
Type=oneshot
ExecStart=/bin/sh -c '/bin/chgrp $GRP /sys/class/backlight/*/brightness ; /bin/chmod g+w /sys/class/backlight/*/brightness'
RemainAfterExit=no

[Install]
WantedBy=sysinit.target
EOF
    systemctl enable backlightgroup.service || USAGE "# failed to enable the backlightgroup.service"
    systemctl start backlightgroup.service || USAGE "# failed to start the backlightgroup.service"
    systemctl status --no-pager backlightgroup.service
    exit 0
}

MAX=`cat "$SYS/max_brightness"`
CUR=`cat "$SYS/brightness"`

[ "-g" = "$1" -o "--get" = "$1" -o "-get" = "$1" -o -z "$1" ] && {
    echo $(($CUR*100/$MAX))%
    exit 0
}

[ "-o" = "$1" -o "--off" = "$1" ] && {
    echo 0 > "$SYS/brightness"
    exit 0;
}

OP=$1
VAL=$2
[ -z "$VAL" ] && {
    VAL=$OP
    echo $OP | grep -E '^(-|\+)' >/dev/null || OP="-s"
}
VAL=`echo $VAL | sed -E 's/([^0-9]*)([0-9][0-9]*).*/\2/'` # just keep the first found consecutive digits
ISNUM=`echo $VAL | sed 's/[0-9]*//'` # if there was no digits at all this will be nonempty

[ -z "$VAL" -o -n "$ISNUM" ] && USAGE

#echo "OP:$OP VAL:$VAL ISNUM:$ISNUM" >/dev/stderr

case "$OP" in
    -s|--set|-set)
        NVAL=$(($VAL*$MAX/100))
        ;;
    -i|--increase|-inc|+[0-9]*)
        NVAL=$(($CUR+$VAL*$MAX/100))
        ;;
    -d|--decrease|-dec|-[0-9]*)
        NVAL=$(($CUR-$VAL*$MAX/100))
        ;;
    *)
        USAGE
        ;;
esac

[ $NVAL -gt $MAX ] && NVAL=$MAX
[ $NVAL -lt $LOWEST ] && NVAL=$LOWEST 
echo $NVAL > "$SYS/brightness"

#echo $(($NVAL*100/$MAX))"% ($NVAL/$MAX)" >/dev/stderr
exit 0
